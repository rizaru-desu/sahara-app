generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  userId       String      @id @default(uuid()) @db.VarChar(255)
  fullname     String?     @db.VarChar(255)
  phone        String?     @db.VarChar(50)
  dateOfBirth  String?     @db.VarChar(50)
  email        String      @unique @db.VarChar(255)
  password     String      @db.VarChar(255)
  roleId       String      @db.VarChar(255)
  verification Boolean     @default(false)
  createBy     String?     @default("bySystem") @db.VarChar(255)
  modifiedBy   String?     @db.VarChar(255)
  createdAt    DateTime    @default(now())
  modifedAt    DateTime    @updatedAt
  token        AuthToken[]
  customer     Customer[]
  StringMap    StringMap   @relation(fields: [roleId], references: [stringId], onDelete: NoAction, onUpdate: NoAction)

  @@index([roleId])
}

model AuthToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(500)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.VarChar(255)
  user      User     @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([userId], map: "authToken_userId_fkey")
}

model Customer {
  customerId  String   @id @default(uuid()) @db.VarChar(255)
  namaUsaha   String   @unique @db.VarChar(500)
  merekUsaha  String   @db.VarChar(500)
  lamaUsaha   Int
  jumlahBooth Int
  instagram   String?  @db.VarChar(255)
  ecommerce   String?  @db.VarChar(255)
  facebook    String?  @db.VarChar(255)
  userId      String?   @db.VarChar(255)
  createBy    String?  @default("bySystem") @db.VarChar(255)
  createdAt   DateTime @default(now())
  modifedAt   DateTime @updatedAt
  modifiedBy  String?  @db.VarChar(255)
  booth       Booth[]
  user        User?     @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction)

  @@index([userId])
}

model Product {
  productId         String              @id @default(uuid()) @db.VarChar(255)
  productName       String              @db.VarChar(255)
  weight            Decimal
  price             Decimal
  unit              String              @db.VarChar(255)
  productCode       String              @unique(map: "productCode_UNIQUE") @db.VarChar(255)
  expiredPeriod     Int
  createBy          String?             @default("bySystem") @db.VarChar(255)
  createdAt         DateTime            @default(now())
  modifedAt         DateTime            @updatedAt
  modifiedBy        String?             @db.VarChar(255)
  label             LabelProduct[]
  stockProduct      StockProduct[]
  productSuratJalan productSuratJalan[]

  @@index([productId])
}

model Booth {
  boothId     String   @id @default(uuid()) @db.VarChar(255)
  alamatBooth String   @db.VarChar(500)
  geolocation String   @db.VarChar(255)
  photoBooth  Bytes
  customerId  String   @db.VarChar(255)
  createBy    String?  @default("bySystem") @db.VarChar(255)
  modifiedBy  String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  modifedAt   DateTime @updatedAt
  customer    Customer @relation(fields: [customerId], references: [customerId], onDelete: NoAction, onUpdate: NoAction)

  @@index([customerId])
}

model StringMap {
  stringId   String   @id @default(uuid()) @db.VarChar(255)
  objectName String?  @db.VarChar(255)
  key        Int?
  value      String?  @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  createBy   String?  @default("bySystem") @db.VarChar(255)
  modifiedBy String?  @db.VarChar(255)
  users      User[]

  @@index([stringId])
}

model LabelBatch {
  batchId       String         @id @default(uuid()) @db.VarChar(255)
  batchDate     DateTime
  barcodeType   Int
  totalProduct  Int
  statusProduct Int
  fileName      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  createBy      String?        @default("bySystem") @db.VarChar(255)
  modifiedBy    String?        @db.VarChar(255)
  labelProduct  LabelProduct[]
  stockProduct  StockProduct[]

  @@index([batchId])
}

model LabelProduct {
  productId   String     @db.VarChar(255)
  productCode String     @db.VarChar(255)
  barcodeType Int     
  status      Int    
  bestBefore  DateTime   
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  createBy    String?    @default("bySystem") @db.VarChar(255)
  modifiedBy  String?    @db.VarChar(255)
  labelId     String     @id @default(uuid()) @db.VarChar(255)
  batchId     String?    @db.VarChar(255)
  product     Product    @relation(fields: [productId], references: [productId], onDelete: NoAction, onUpdate: NoAction)
  labelBatch  LabelBatch? @relation(fields: [batchId], references: [batchId], onDelete: NoAction, onUpdate: NoAction)


  @@index([labelId])
  @@index([productId])
  @@index([batchId])
}

model StockProduct {
  productId      String     @db.VarChar(255)
  status         Int
  createBy       String?    @default("bySystem") @db.VarChar(255)
  createdAt      DateTime   @default(now())
  modifiedBy     String?    @db.VarChar(255)
  updatedAt      DateTime   @updatedAt
  batchId        String     @db.VarChar(255)
  boxBarcode     String     @db.VarChar(255)
  expiredDate    DateTime
  labelingdate   DateTime
  price          Decimal
  productBarcode String     @db.VarChar(255)
  productCode    String     @db.VarChar(255)
  stockId        String     @id @db.VarChar(255)
  unit           String
  weight         String
  product        Product    @relation(fields: [productId], references: [productId], onDelete: NoAction, onUpdate: NoAction)
  labelBatch     LabelBatch @relation(fields: [batchId], references: [batchId], onDelete: NoAction, onUpdate: NoAction)

  @@index([productId])
  @@index([stockId])
  @@index([batchId])
}

model SuratJalan {
  doId            String   @id @default(uuid()) @db.VarChar(255)
  sjNo            String   @db.VarChar(255)
  OrderNo         String   @db.VarChar(255)
  shippingDate    DateTime
  customerId      String   @db.VarChar(255)
  deliveryAddress String   @db.VarChar(255)
  totalWeight     Decimal
  deliveryNote    String   @db.VarChar(255)
  doStatus        Int
  recaiveDate     DateTime
  recaiveBy       String
  recaiveNote     String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createBy        String?  @default("bySystem") @db.VarChar(255)
  modifiedBy      String?  @db.VarChar(255)

  @@index([doId])
}

model productSuratJalan {
  doId           String   @id @default(uuid()) @db.VarChar(255)
  productId      String   @db.VarChar(255)
  shipQty        Int
  productBarcode String   @db.VarChar(255)
  productBox     String   @db.VarChar(255)
  recaiveQty     String   @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  createBy       String?  @default("bySystem") @db.VarChar(255)
  modifiedBy     String?  @db.VarChar(255)
  product        Product  @relation(fields: [productId], references: [productId], onDelete: NoAction, onUpdate: NoAction)

  @@index([doId])
  @@index([productId])
}
